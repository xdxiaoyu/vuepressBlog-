(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{189:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),a("h2",{attrs:{id:"一-什么是javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-什么是javascript"}},[t._v("#")]),t._v(" 一.什么是JavaScript")]),t._v(" "),a("h3",{attrs:{id:"_1、javascript历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、javascript历史"}},[t._v("#")]),t._v(" 1、JavaScript历史")]),t._v(" "),a("p",[t._v("​\t1995年，JavaScript诞生于网景公司一位Brenda Eich的工程师手上")]),t._v(" "),a("p",[t._v("​\t1998年，ISO和IEC将ECMAScript采纳为标准（ISO/IEC-16262）。自此以后，各家浏览器均已ECMAScript作为自己JavaScripe实现的依据，虽然具体实现各有不同。")]),t._v(" "),a("h3",{attrs:{id:"_2、javascript实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、javascript实现"}},[t._v("#")]),t._v(" 2、JavaScript实现")]),t._v(" "),a("p",[t._v("​\t虽然JavaScript和ECMAScript基本上是同义词，但是JavaScript远远不限于ECMA-262所定义的那样。完整的JavaScript实现包含以下几个部分：")]),t._v(" "),a("ul",[a("li",[t._v("核心（ECMAScript）")]),t._v(" "),a("li",[t._v("文档对象模型（DOM）")]),t._v(" "),a("li",[t._v("浏览器对象（BOM）")])]),t._v(" "),a("h4",{attrs:{id:"_2-1、ecmascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1、ecmascript"}},[t._v("#")]),t._v(" 2.1、ECMAScript")]),t._v(" "),a("p",[t._v("​\tECMAScript，即ECMA-262定义的语言，并不局限于Web浏览器。事实上，这门语言没有输入和输出之类的方法。ECMA-262将这门语言作为一个基准来定义，以便在它之上再构建更稳健的脚本语言。Web浏览器只是ECMAScript实现可能存在的一种"),a("strong",[t._v("宿主环境")]),t._v("。宿主环境提供ECMAScript的基准实现和与环境自身交互必须的扩展。扩展（比如DOM）使用ECMAScript核心类型和语法，提供特定于环境的 额外功能。其他宿主环境还有服务端JavaScript平台Node.js和即将被淘汰的Adobe Flash。")]),t._v(" "),a("blockquote",[a("p",[t._v("如果不涉及浏览器的话，ECMA-262到底定义了什么？在基本的层面，它描述这门语言的如下部分：")]),t._v(" "),a("ul",[a("li",[t._v("语法")]),t._v(" "),a("li",[t._v("类型")]),t._v(" "),a("li",[t._v("语句")]),t._v(" "),a("li",[t._v("关键字")]),t._v(" "),a("li",[t._v("保留字")]),t._v(" "),a("li",[t._v("操作符")]),t._v(" "),a("li",[t._v("全局对象")])])]),t._v(" "),a("p",[t._v("​\tECMAScript只是对实现这个规范描述的所有方面的一门语言的称呼。JavaScript实现ECMAScript，而Adobe ActionScript同样也实现了ECMAScript。")]),t._v(" "),a("blockquote",[a("p",[t._v("ECMA-262第6版本，俗称ES6、ES2015，发布于2015年6月。这一版包含了大概这个规范有史以来最重要的一批增强特性。")]),t._v(" "),a("p",[t._v(".....")]),t._v(" "),a("p",[t._v("ECMA-262第10版本，也称ES10、ES2019，发布于2019年6月。修订内容大家可网上自行查阅。")]),t._v(" "),a("p",[t._v("ECMA-262第11版本，也称ES11、ES2020，发布于2020年6月。修订内容大家可网上自行查阅。")])]),t._v(" "),a("h4",{attrs:{id:"_2-2、dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2、dom"}},[t._v("#")]),t._v(" 2.2、DOM")]),t._v(" "),a("p",[t._v("​\t"),a("strong",[t._v("文档对象模型")]),t._v("（DOM）是一个应用编程接口(API)，用于在HTML中使用扩展的XML。DOM将整个页面抽象为一组分层节点。HTML或XML页面的每个组成部分都是一种节点，包含不同数据。")]),t._v(" "),a("blockquote",[a("p",[t._v("DOM通过创建表示文档的树，让开发者可以随性所欲地控制网页的内容和结构。使用DOM API，可以轻松删除、添加、替换、修改节点。")])]),t._v(" "),a("p",[t._v("①、为什么DOM是必需的")]),t._v(" "),a("p",[t._v("​\t浏览器支持不同形态的动态HTML（DHTML）的情况下，开发者首先可以做到不刷新页面而修改页面外观和内容。这代表web技术的一个巨大进步，但也暴露了很大的问题。由于网景和微软采用不同思路开发DHTML，开发者写一个HTML页面就可以在任何浏览器中运行的好日子就此终结。")]),t._v(" "),a("p",[t._v("​\t为了保持Web跨平台的本性，万维网联盟（W3C）开始制定DOM标准进程")]),t._v(" "),a("h4",{attrs:{id:"_2-3、bom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3、bom"}},[t._v("#")]),t._v(" 2.3、BOM")]),t._v(" "),a("p",[t._v("​\t浏览器提供了"),a("strong",[t._v("浏览器对象模型")]),t._v("（BOM）API，用于支持访问和操作浏览器的窗口。使用DOM，开发者可以操控浏览器显示页面之外的部分。而BOM真正独一无二的地方，当然也是问题最多的地方，就是它是唯一一个没有相关标准的JavaScript实现。")]),t._v(" "),a("p",[t._v("​\tHTML5改变了这个局面，这个版本的HTML以正式规范的形式涵盖了尽可能多的BOM特性问题。")]),t._v(" "),a("h3",{attrs:{id:"_3、javascript的不同版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、javascript的不同版本"}},[t._v("#")]),t._v(" 3、JavaScript的不同版本")]),t._v(" "),a("blockquote",[a("p",[t._v("多数浏览器对JavaScript的支持指的是实现ECMAScript和DOM的程度。")])]),t._v(" "),a("h3",{attrs:{id:"_4、小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、小结"}},[t._v("#")]),t._v(" 4、小结")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("JavaScript是一门用来与网页交互的脚本语言。\n包含以下三个组成部分：\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" ECMAScript：由"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ECMA")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("262")]),t._v("定义并提供核心功能。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 文档对象模型（"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("）：提供与网页内容交互的方法和接口。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 浏览器对象模型（"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BOM")]),t._v("）：提供与浏览器交互的方法和接口。\n")])])]),a("blockquote",[a("p",[t._v("JavaScript的这三个部分得到了五大浏览器（IE、FireFox、Chrome、Safari、Open）不同程度的支持。所有浏览器基本都对ES5（ECMAScript5）提供了完善的支持，而对ES6和ES7的支持度也在不断提升。浏览器对DOM的支持各部相同，但对Level3的支持日益趋于规范。HTML5中收录的BOM会因浏览器而异，不过开发者仍然可以假定存在很大一部分公共特性。")])]),t._v(" "),a("h2",{attrs:{id:"二、html中的javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、html中的javascript"}},[t._v("#")]),t._v(" 二、HTML中的JavaScript")]),t._v(" "),a("h3",{attrs:{id:"_1、-script-元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、-script-元素"}},[t._v("#")]),t._v(" 1、"),a("code",[t._v("<script>")]),t._v("元素")]),t._v(" "),a("p",[a("code",[t._v("<script>")]),t._v("元素有下列8个属性：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("async")]),t._v("：可选。表示应该立即开始下载脚本，但不能阻止 其他页面动作，比如下载资源或者等待其他脚本加载。只对外部脚本文件有效。")]),t._v(" "),a("li",[a("code",[t._v("charset")]),t._v("：可选。使用"),a("code",[t._v("src")]),t._v("属性指定的代码字符集。这个属性很少使用，因为大多数浏览器不在乎它的值。")]),t._v(" "),a("li",[a("code",[t._v("crossorigin")]),t._v("：可选。配置相关请求的CORS（跨域资源共享）设置。默认不使用CORS。"),a("code",[t._v('crossorigin="anonymous"')]),t._v("配置文件请求不必设置凭据标志。"),a("code",[t._v('crossorigin="use-credentials"')]),t._v("设置凭据标志，意味着出站请求会包含凭据。")]),t._v(" "),a("li",[a("code",[t._v("defer")]),t._v("：可选。表示在文档解析和显示完成后再执行脚本是没有问题的。只对外部脚本文件有效。在IE7及更早的版本中，对行内脚本也可以指定这个属性。")]),t._v(" "),a("li",[a("code",[t._v("integrity")]),t._v("：可选。允许比对接收到的资源和指定的加密签名以验证子资源完整性（SRI，Subresource Intergrity）。如果接收到的资源的签名与这个属性指定的签名不匹配，则页面会报错，脚本不会执行。这个属性可以用于确保内容分发网络（CDN）不会提供恶意内容。")]),t._v(" "),a("li",[a("code",[t._v("src")]),t._v("：可选。表示包含要执行的代码的外部文件。")]),t._v(" "),a("li",[a("code",[t._v("type")]),t._v("：可选。代替"),a("code",[t._v("language")]),t._v("，表示代码块中脚本语言的内容类型")])]),t._v(" "),a("p",[a("code",[t._v("<script>")]),t._v("的使用方式有两种：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("通过它直接在网页中嵌入JavaScript代码。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hi !"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n包含在"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("内的代码会被从上到下解释。上述例子，被解释的是一个函数定义，并且该函数会被保存在解释器环境中。在 ")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" 元素中的代码被计算完成之前，页面的其余内容不会被加载，也不会被显示。\n")])])])]),t._v(" "),a("li",[a("p",[t._v("通过它在网页中包含外部JavaScript文件。")]),t._v(" "),a("blockquote",[a("p",[t._v("要包含外部文件中的JavaScript，就必须使用"),a("code",[t._v("src")]),t._v("这个属性。这个属性的值是一个URL，指向包含JavaScript代码的文件。")])])])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("example.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n上述例子在页面中加载了一个名为example.js的外部文件。文件本身只需要包含要放在"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("的起始及结束标签中的JavaScript代码。于解释行内JavaScript一样，在解释外部JavaScript文件时，页面也会阻塞。（阻塞时间也包含下载文件的时间。）在XHTML文档中，可以忽略结束标签，比如：\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("example.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("以上语法不能在HTML文件中使用，因为它是无效的HTML，有些浏览器不能正常，比如IE。")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("注意")]),t._v("    按照惯例，外部JavaScript文件的扩展名是js。这不是必需的，因为浏览器不会检查所包含的JavaScript文件的扩展名。这就为使用服务器端脚本语言（如TypeScript，或React的JSX）转译为JavaScript提供了可能性。不过要注意，服务器经常会根据文件扩展来确定响应的正确MIME类型。如果不打算使用.js扩展名，一定要确保服务器能返回正确的MIME类型。")]),t._v(" "),a("p",[t._v("MIME类型：是设定某种"),a("a",{attrs:{href:"https://baike.baidu.com/item/%E6%89%A9%E5%B1%95%E5%90%8D/103577",target:"_blank",rel:"noopener noreferrer"}},[t._v("扩展名"),a("OutboundLink")],1),t._v("的"),a("a",{attrs:{href:"https://baike.baidu.com/item/%E6%96%87%E4%BB%B6/6270998",target:"_blank",rel:"noopener noreferrer"}},[t._v("文件"),a("OutboundLink")],1),t._v("用一种"),a("a",{attrs:{href:"https://baike.baidu.com/item/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/5985445",target:"_blank",rel:"noopener noreferrer"}},[t._v("应用程序"),a("OutboundLink")],1),t._v("来打开的方式类型，当该扩展名文件被访问的时候，"),a("a",{attrs:{href:"https://baike.baidu.com/item/%E6%B5%8F%E8%A7%88%E5%99%A8/213911",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器"),a("OutboundLink")],1),t._v("会自动使用指定应用程序来打开。多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式。")])]),t._v(" "),a("h4",{attrs:{id:"_1-1-标签占位符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-标签占位符"}},[t._v("#")]),t._v(" 1.1 标签占位符")]),t._v(" "),a("p",[t._v("​\t过去，所有的"),a("code",[t._v("<script>")]),t._v("元素都被放在页面的"),a("code",[t._v("<head>")]),t._v("标签内。对于很多需要JavaScript的页面，这会导致页面渲染的明显延迟，此期间浏览器窗口完全空白。为解决这个问题，现代Web应用程序通常将所有JavaScript引用放在"),a("code",[t._v("<body>")]),t._v("元素中的页面内容后面。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token doctype"}},[t._v("<!DOCTYPE html>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("example.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 之前的写法 --\x3e")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 这是页面内容 --\x3e")]),t._v("\n        \n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("example.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 现在的写法 --\x3e")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),a("h4",{attrs:{id:"_1-2-推迟执行脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-推迟执行脚本"}},[t._v("#")]),t._v(" 1.2 推迟执行脚本")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("HTML 4.01为`<script>`元素定义了一个叫`defer`属性。这个属性表示脚本在执行的时候不会改变页面的结构。因此这个脚本完全可以在整个页面解析完之后再运行。在`<script>`元素上设置`defer`属性，会告诉浏览器应该立即开始下载，但执行应该推迟：\n")])])]),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token doctype"}},[t._v("<!DOCTYPE html>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 这是页面内容 --\x3e")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("defer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("example.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v('\n\n注意  对于XHTML文档，指定defer属性时应该写成defer="defer"。\n')])])]),a("h4",{attrs:{id:"_1-3-异步执行脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-异步执行脚本"}},[t._v("#")]),t._v(" 1.3 异步执行脚本")]),t._v(" "),a("p",[t._v("​\tHTML5位"),a("code",[t._v("<script>")]),t._v("元素定义了"),a("code",[t._v("async")]),t._v("属性。从改变脚本处理方式上看，"),a("code",[t._v("async")]),t._v("属性与"),a("code",[t._v("defer")]),t._v("类似。当然，它们两者也都只适用于外部脚本，都会告诉浏览器立即开始下载。不过，与"),a("code",[t._v("defer")]),t._v("不同的是，标记"),a("code",[t._v("async")]),t._v("的脚本并不保证它们出现的次序执行")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token doctype"}},[t._v("<!DOCTYPE html>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 这是页面内容 --\x3e")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("example.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("example2.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--\n\t在这个例子中，第二个脚本可能先于第一个脚本执行。因此，重点在于它们之间没有依赖关系。给脚本添加async属性的目的是告诉浏览器，不必等脚本下载和执行完后再加载页面，同样也不必等到该异步脚本下载和执行后再加载其他脚本。正因为如此，脚步脚步不应该在加载期间修改DOM。\n--\x3e")]),t._v('\n\n注意  对于XHTML文档，指定async属性时应该写成async="async"。\n')])])]),a("h4",{attrs:{id:"_1-4-动态加载脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-动态加载脚本"}},[t._v("#")]),t._v(" 1.4  动态加载脚本")]),t._v(" "),a("p",[t._v("​\t除了"),a("code",[t._v("<script>")]),t._v("标签，还有其他方式可有加载脚本。因为JavaScript可以使用DOM API， 所以通过向DOM中动态添加"),a("code",[t._v("<script>")]),t._v("元素同样可以加载指定脚本。只要创建一个"),a("code",[t._v("<script>")]),t._v("元素并将其添加到DOM即可。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" script "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nscript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gibberish.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当然，在把HTMLElement元素添加到DOM且执行到这段代码之前不会发送请求。默认情况下，以这种方式创建的<script>元素是以异步方式加载的，相当于添加了async属性。不过这种做可能会有问题，因为所有浏览器都支持createElement()方法，但不是所有浏览器都支持async属性。因此，如果要统一动态脚本的加载行为，可以明确将其设置为同步加载：")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" script "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nscript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gibberish.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nscript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("async "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以这种方式获取的资源对浏览器预加载器是不可见的。这会严重影响它们在资源获取队列中的优先级。根据应用程序的工作方式以及怎么使用，这种方式可能会严重影响性能。要想让预加载器知道这些动态请求文件的存在，可以在文档头部显式声明它们：")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("link rel"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"preload"')]),t._v(" href"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gibberish.js"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h4",{attrs:{id:"_1-5-xhtml中-的变化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-xhtml中-的变化"}},[t._v("#")]),t._v(" 1.5 XHTML中 的变化")]),t._v(" "),a("p",[t._v("​\t可扩展超文本标记语言是将HTML作为XML的应用重新包装的结果。与XHTML不同，在XHTML中使用JavaScript必须指定"),a("code",[t._v("type")]),t._v("属性且值为"),a("code",[t._v("text/javascript")]),t._v("。解析 "),a("code",[t._v("a < b")]),t._v("语句中的小于号（"),a("code",[t._v("<")]),t._v("）会被解析成一个标签的开始，并且由于作为标签开始的小于号后面不能有空格，这样会导致语法错误。避免XHTML中这种语法错误的方式有两种。")]),t._v(" "),a("blockquote",[a("p",[t._v("第一种是把所有小于号（"),a("code",[t._v("<")]),t._v("）都替换成对应的HTML实体形式（"),a("code",[t._v("&lt;")]),t._v("）")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text/javascript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("lt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"B"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AB"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("第二种是把所有代码都包含到一个CDATA块中。在XHTML（及XML）中，CDATA快表示文档中可以包含任意文本的区块，其内容不作为标签来解析，因此可以在其中包含任意字符，包括小于号，且不会引发语法错误。使用CDATA格式如下：")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text/javascript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v(" ")]),a("span",{pre:!0,attrs:{class:"token included-cdata"}},[a("span",{pre:!0,attrs:{class:"token cdata"}},[t._v("<![CDATA[")]),a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("lt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"B"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AB"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),a("span",{pre:!0,attrs:{class:"token cdata"}},[t._v("]]>")])])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n在兼容XHTML的浏览器中，这样能解决问题。但在不支持CDATA块的非XHTML兼容浏览器中则不行。为此，CDATA标记必须使用JavaScript注释来抵消。\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text/javascript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")])]),a("span",{pre:!0,attrs:{class:"token included-cdata"}},[a("span",{pre:!0,attrs:{class:"token cdata"}},[t._v("<![CDATA[")]),a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("lt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"B"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AB"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")])]),a("span",{pre:!0,attrs:{class:"token cdata"}},[t._v("]]>")])]),a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n这种格式适用于所有现代浏览器。虽然有点黑科技的味道，但它可以通过XHTML验证，而且对XHTML之前的浏览器也能优雅地降级\n")])])]),a("h3",{attrs:{id:"_2、行内代码与外部文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、行内代码与外部文件"}},[t._v("#")]),t._v(" 2、行内代码与外部文件")]),t._v(" "),a("p",[t._v("​\t\t虽然可以直接在HTML文件中嵌入JavaScript代码，但通常认为最佳实践是尽可能将JavaScript代码放在外部文件中。不过这个最佳实践并不是明确的强制性规则。推荐使用外部文件的理由如下。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("可维护性")]),t._v("。 JavaScript代码如果分散到很多HTML页面，会导致维护困难。而一个目录保存所有JavaScript文件，则更容易维护，这样开发者就可以独立于使用它们的HTML页面来编辑代码。")]),t._v(" "),a("li",[a("strong",[t._v("缓存")]),t._v("。 浏览器会根据特定的设置缓存所有外部链接的JavaScript文件，这意味着如果两个页面都用到同一个文件，则该文件只需下载一次。这最终意味着页面加载更快。")]),t._v(" "),a("li",[a("strong",[t._v("适应未来")]),t._v("。  通过把JavaScript放到外部文件中，就不必考虑用XHTML或前面提到的注释黑科技。包含外部JavaScript文件的语法在HTML和XHTML中是一样的")])]),t._v(" "),a("h3",{attrs:{id:"_3、文档模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、文档模式"}},[t._v("#")]),t._v(" 3、文档模式")]),t._v(" "),a("blockquote",[a("p",[t._v("最初文档模式有两种："),a("strong",[t._v("混合模式")]),t._v("和"),a("strong",[t._v("标准模式")]),t._v("，后又出现第三种文档模式："),a("strong",[t._v("准标准模式")])])]),t._v(" "),a("h3",{attrs:{id:"_4、-noscrip元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、-noscrip元素"}},[t._v("#")]),t._v(" 4、 "),a("code",[t._v("noscrip")]),t._v("元素")]),t._v(" "),a("p",[t._v("​\t\t针对早期浏览器不支持JavaScript的问题，需要一个页面优雅的降级的处理方案。最终，"),a("code",[t._v("<noscript>")]),t._v("元素出现，被用于给不支持JavaScript，但对于禁用JavaScript的浏览器来说，这个元素仍然有它的用处。")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("noscript")]),t._v("元素可以包含任何可以出现在"),a("code",[t._v("<body>")]),t._v("中的HTML元素，"),a("code",[t._v("<script>")]),t._v("除外。在下列两种情况下，浏览器将显示包含在"),a("code",[t._v("noscript")]),t._v("中的内容：")]),t._v(" "),a("p",[t._v("--- 浏览器不支持脚本；")]),t._v(" "),a("p",[t._v("--- 浏览器对脚本的支持被关闭。")]),t._v(" "),a("p",[t._v("任何一个条件被满足，包含在"),a("code",[t._v("noscript")]),t._v("中的内容就会被渲染。否则，浏览器不会渲染"),a("code",[t._v("noscript")]),t._v("中的内容。")])]),t._v(" "),a("h3",{attrs:{id:"_5-、小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-、小结"}},[t._v("#")]),t._v(" 5 、小结")]),t._v(" "),a("ul",[a("li",[t._v("要包含外部JavaScript文件，必须将"),a("code",[t._v("src")]),t._v("属性设置为要包含文件的URL。文件可以跟网页在同一台服务器上，也可以位于完全不同的域。")]),t._v(" "),a("li",[t._v("所有"),a("code",[t._v("<script>")]),t._v("元素会依照它们在网页中出现的次序被解释。在不使用"),a("code",[t._v("defer")]),t._v("和"),a("code",[t._v("async")]),t._v("属性的情况下，包含"),a("code",[t._v("<script>")]),t._v("元素中的代码必须严格按次序解释。")]),t._v(" "),a("li",[t._v("对不推迟执行的脚本，浏览器必须解释完位于"),a("code",[t._v("<script>")]),t._v("元素中的代码，然后才能继续渲染页面的剩余部分。为此，通常应该把"),a("code",[t._v("<script>")]),t._v("元素放到页面末尾i，介于主内容之后及"),t._v("标签之前。")]),t._v(" "),a("li",[t._v("可以使用"),a("code",[t._v("async")]),t._v("属性表示脚本不需要等待其他脚本，同时也不阻塞文档渲染，即异步加载。异步脚本不能保证按照它们在页面中出现的次序执行。")]),t._v(" "),a("li",[t._v("通过使用"),a("code",[t._v("<noscript>")]),t._v("元素，可以指定在浏览器不支持脚本时显示的内容。如果浏览器支持并启用脚本，则"),a("code",[t._v("<noscript>")]),t._v("元素中的任何内容都不会被渲染。")])]),t._v(" "),a("h2",{attrs:{id:"三、语言基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、语言基础"}},[t._v("#")]),t._v(" 三、语言基础")]),t._v(" "),a("h3",{attrs:{id:"_1、语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、语法"}},[t._v("#")]),t._v(" 1、语法")]),t._v(" "),a("h4",{attrs:{id:"_1-1-区分大小写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-区分大小写"}},[t._v("#")]),t._v(" 1.1 区分大小写")]),t._v(" "),a("p",[t._v("​\t 首先要知道的是，ECMAScript中一切都区分大小写。无论是变量、函数名还是操作符，都区分大小写。换句话说，变量"),a("code",[t._v("test")]),t._v("和变量"),a("code",[t._v("Test")]),t._v("是两个不同的变量。")]),t._v(" "),a("h4",{attrs:{id:"_1-2-标识符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-标识符"}},[t._v("#")]),t._v(" 1.2 标识符")]),t._v(" "),a("p",[t._v("​\t  "),a("strong",[t._v("标识符")]),t._v("：就是变量、函数、属性或函数参数的名称。")]),t._v(" "),a("blockquote",[a("p",[t._v("标识符可以由一或多个下列字符组成：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("第一个字符必须是一个字母、下划线（"),a("code",[t._v("_")]),t._v("）或美元符号（"),a("code",[t._v("$")]),t._v("）;")])]),t._v(" "),a("li",[a("p",[t._v("剩下的其他字符可以是字母、下划线、美元符号或数字。")]),t._v(" "),a("p",[t._v("按照惯例，ECMAScript标识符使用驼峰大小写形式。例："),a("code",[t._v("firstEscond")])]),t._v(" "),a("p",[a("strong",[t._v("注意")]),t._v("    关键字、保留字、"),a("code",[t._v("true")]),t._v(" 、"),a("code",[t._v("false")]),t._v("和"),a("code",[t._v("null")]),t._v("不能作为标识符")])])]),t._v(" "),a("h4",{attrs:{id:"_1-3-注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-注释"}},[t._v("#")]),t._v(" 1.3 注释")]),t._v(" "),a("p",[t._v("ECMAScript采用C语言风格的注释，包括单行注释和块注释。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单行注释")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 这是多行\n注释*/")]),t._v("\n")])])]),a("h4",{attrs:{id:"_1-4-严格模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-严格模式"}},[t._v("#")]),t._v(" 1.4  严格模式")]),t._v(" "),a("p",[t._v("​\t\t  ECMAScript 5增加了严格模式的概念。严格模式是一种不同的JavaScript解析和执行模式，ECMAScript 3的一些不规范写法在这种模式下会被处理。对于不安全的活动将抛出错误。要对整个脚本启用严格模式，在脚本开头加上这一行：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user strict"')]),t._v("\n")])])]),a("p",[t._v("​\t\t   虽然看起来像没有赋值给任何变量的字符串，但它其实是一个预处理指令。任何支持的JavaScript引擎看到它都会切换到严格模式。选择这种语法形式的目的是不破坏ECMAScript 3语法。")]),t._v(" "),a("p",[t._v("​\t\t   也可以单独指定一个函数在严格模式下执行，只要把这个预处理指令放到函数体开头即可：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数体")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所有现代浏览器都支持严格模式。")]),t._v("\n")])])]),a("h4",{attrs:{id:"_1-5-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-语句"}},[t._v("#")]),t._v(" 1.5  语句")]),t._v(" "),a("p",[t._v("​\t\t  ECMAScript中的语句以分号结尾。省略分号意味着由解析器确定语句在哪里结尾，如下所示：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没有加分号也有效，但不推荐")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" diff "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加分号有效，推荐")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 记着加分号有助于防止省略造成的问题，比如可以避免输入内容不完整")]),t._v("\n")])])]),a("p",[t._v("​\t\t if之类的控制语句只在执行多条语句时要求必须有代码块。不过最佳实践是始终在控制语句中使用代码块，即使要执行的只有一条语句，如下例所示：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有效，但容易导致错误，应该避免")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 推荐")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在控制语句中使用代码块可以让你内容更清晰，在需要修改代码时也可以减少出错的可能性")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2、关键字与保留字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、关键字与保留字"}},[t._v("#")]),t._v(" 2、关键字与保留字")]),t._v(" "),a("p",[t._v("​\t\tECMA-262描述了一组保留的"),a("strong",[t._v("关键字")]),t._v("，这些关键字有特殊用途。比如表示控制语句的开始和结束，或者执行特定的操作。按照规定，保留的关键字不能用座标识符或属性名。ECMA-262第6版规定的所有关键字如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("berak\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("var")]),t._v("\t\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v("\t\t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("\t\t "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("void")]),t._v("\t\t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v("\t\t "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("extends")]),t._v("\t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\t\t\t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\t\tfinally\t\t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v("\t\t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v("\t\t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v("\t\t \t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("debugger")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v("\t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\t\t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("\t\t\t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v("\t\t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3、变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、变量"}},[t._v("#")]),t._v(" 3、变量")]),t._v(" "),a("p",[t._v("​\t\tECMAScript变量是松散型的，意思变量是可以用于保存任何类型的数据。每个变量只不过是一个用于保存任意值的命名占位符。有3个关键字可以声明变量： "),a("code",[t._v("var")]),t._v("、"),a("code",[t._v("const")]),t._v("和"),a("code",[t._v("let")]),t._v("。其中, "),a("code",[t._v("var")]),t._v("在ECMAScript的所有版本中都可以使用，而"),a("code",[t._v("const")]),t._v("和"),a("code",[t._v("let")]),t._v(" 只能在ECMAScript 6及更晚的版本中使用。")]),t._v(" "),a("h4",{attrs:{id:"_3-1、var关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、var关键字"}},[t._v("#")]),t._v(" 3.1、var关键字")]),t._v(" "),a("p",[t._v("​\t\t\t①  "),a("code",[t._v("var")]),t._v(" 声明作用域")]),t._v(" "),a("p",[t._v("​\t\t\t使用"),a("code",[t._v("var")]),t._v("操作符定义的变量会成为包含它的函数的局部变量。比如，使用"),a("code",[t._v("var")]),t._v("在一个函数内部定义一个变量，就意味着该变量将在函数退出时被销毁：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hi"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 局部变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 出错")]),t._v("\n")])])]),a("p",[t._v("​\t\t②  "),a("code",[t._v("var")]),t._v("声明提前")]),t._v(" "),a("p",[t._v("​\t\t使用"),a("code",[t._v("var")]),t._v("时，下面的代码不会报错。这是因为使用这个关键字声明的变量会自动提升到函数作用域顶部：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 之所以不会报错，是因为ECMAScript运行时把它看成等价如下代码：")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])])]),a("h4",{attrs:{id:"_3-2-let-声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-let-声明"}},[t._v("#")]),t._v(" 3.2  let 声明")]),t._v(" "),a("p",[t._v("​\t"),a("code",[t._v("let")]),t._v("跟"),a("code",[t._v("var")]),t._v("的作用差不多，但有着非常重要的区别。最明显的区别是，"),a("code",[t._v("let")]),t._v("声明的范围是块作用域，而"),a("code",[t._v("var")]),t._v("声明的范围是函数作用域。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Matt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Matt")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Matt")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 26")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ReferenceError: age没有定义")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在这里，age 变量之所以不能在if块外部被引用，是因为它的作用域仅限于该块的内部。块作用域是函数作用域的子集。因此适用于var的作用域限制同样也适用于let。")]),t._v("\n")])])]),a("p",[t._v("​\t\t当然，JavaScript引擎会记录用于变量声明的标识符及其所在块作用域，因此嵌套使用相同的标识符不会报错，而这是因为同一个块中没有重复声明：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Nicholas'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//\t'Nicholas'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Matt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//\t'Matt'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//\t30")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//\t26")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对声明冗余报错不会因混用let和var而受影响。这两个关键字声明的并不是不同类型的变量，它们只是指出变量在相关作用域如何存在。")]),t._v("\n")])])]),a("p",[t._v("​\t①  暂死性死区")]),t._v(" "),a("p",[t._v("​\t\t"),a("code",[t._v("let")]),t._v("与"),a("code",[t._v("var")]),t._v("的另一个重要的区别，就是"),a("code",[t._v("let")]),t._v("声明的变量不会再作用域中被提升。在"),a("code",[t._v("let")]),t._v("声明之前的执行瞬间被称为“暂死性死区”，在此阶段引用任何后面才声明的变量都会抛出"),a("code",[t._v("ReferenceError")]),t._v("。")]),t._v(" "),a("p",[t._v("​\t②  全局声明")]),t._v(" "),a("p",[t._v("​\t\t 与"),a("code",[t._v("var")]),t._v("关键字不同，使用"),a("code",[t._v("let")]),t._v("在全局作用域中声明的变量不会成为"),a("code",[t._v("window")]),t._v("对象的属性（"),a("code",[t._v("var")]),t._v("声明的变量则会）。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Matt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'Matt'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  undefined")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不过，let声明仍然是在全局作用域中发生的，相应变量会在页面的生命周期内存续。因此，为了避免SyntaxError,必须确保页面不会重复声明同一个变量。")]),t._v("\n")])])]),a("p",[t._v("​\t\t③  条件声明")]),t._v(" "),a("p",[t._v("在使用"),a("code",[t._v("var")]),t._v("声明变量时，由于声明会被提升，JavaScript引擎会自动将多余的声明在作用域顶部合并为一个声明。因为"),a("code",[t._v("let")]),t._v("的作用域是块，所以不可能检查前面是否已经使用"),a("code",[t._v("let")]),t._v("声明过变量，同时也就不可能在没声明的情况下引用它")]),t._v(" "),a("p",[t._v("​\t\t④  "),a("code",[t._v("for")]),t._v("循环中的"),a("code",[t._v("let")]),t._v("声明")]),t._v(" "),a("blockquote",[a("p",[t._v("在"),a("code",[t._v("let")]),t._v("出现之前，"),a("code",[t._v("for")]),t._v("循环定义的迭代变量会渗透到循环外部：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 循环逻辑")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("改成使用"),a("code",[t._v("let")]),t._v("之后，这个问题就消失了，因为迭代变量的作用域仅限于"),a("code",[t._v("for")]),t._v("循环内部：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 循环逻辑")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ReferenceError: i没有定义")]),t._v("\n")])])]),a("p",[t._v("​\t\t\t在使用"),a("code",[t._v("var")]),t._v("的时候，最常见的问题就是对迭代变量的奇特声明和修改：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 你可能以为会输出0、1、2、3、4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实际上会输出5、5、5、5、5")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 之所以会这样，是因为在退出循环时，迭代变量保存的是导致循环退出的值：5。在之后执行超时逻辑时，所有的 i 都是同一个变量，因而输出的都是同一个最终值。")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 而在使用 let 声明迭代变量时，JavaScript引擎在后台会为每个迭代循环声明一个新的迭代变量。每个 setTimeout 引用的都是不同的变量实例，所以 console.log 输出的是我们期望的值，也就是循环执行过程中每个迭代变量的值。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 会输出0、1、2、3、4")]),t._v("\n")])])]),a("h4",{attrs:{id:"_3-4、声明风格及最佳实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4、声明风格及最佳实践"}},[t._v("#")]),t._v(" 3.4、声明风格及最佳实践")]),t._v(" "),a("p",[t._v("​\t\tECMAScript 6增加"),a("code",[t._v("let")]),t._v("和 "),a("code",[t._v("const")]),t._v("从客观上为这门语言更精确地声明作用域和语义提供了更好的支持。从行为怪异的"),a("code",[t._v("var")]),t._v("所造成的各种问题，新的有助于提升代码质量的最佳实践也逐渐显现。")]),t._v(" "),a("p",[t._v("​\t\t①、不使用"),a("code",[t._v("var")])]),t._v(" "),a("p",[t._v("​\t\t\t\t限制自己只使用"),a("code",[t._v("let")]),t._v("和"),a("code",[t._v("const")]),t._v("有助于提升代码质量，因为变量有了明确的作用域、声明位置以及不变的值。")]),t._v(" "),a("p",[t._v("​\t\t②、"),a("code",[t._v("const")]),t._v("优先，"),a("code",[t._v("let")]),t._v("次之")]),t._v(" "),a("p",[t._v("​\t\t\t\t使用"),a("code",[t._v("const")]),t._v("声明可以让浏览器运行时强制保持变量不变，也可以让静态代码分析工具提前发现不合法的赋值操作。应优先使用"),a("code",[t._v("const")]),t._v("来声明变量，只在提前知道未来会有修改时，再使用"),a("code",[t._v("let")]),t._v("。这样能让开发者更有信心地推断某些变量的值永远不会变，同时也能迅速发现因意外赋值导致的非预期行为。")]),t._v(" "),a("h3",{attrs:{id:"_4、数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、数据类型"}},[t._v("#")]),t._v(" 4、数据类型")]),t._v(" "),a("p",[t._v("​\t\t\tECMAScript有6种简单数据类型（也称为原始类型）："),a("code",[t._v("Undefined")]),t._v(" 、"),a("code",[t._v("Null")]),t._v("、"),a("code",[t._v("Boolean")]),t._v("、"),a("code",[t._v("Number")]),t._v("、"),a("code",[t._v("String")]),t._v("和"),a("code",[t._v("Symbol")]),t._v("。"),a("code",[t._v("Symbol")]),t._v("（符号）是ECMAScript 6新增的。还有一种复杂数量类型叫 "),a("code",[t._v("Object")]),t._v("（对象）。"),a("code",[t._v("Object")]),t._v("是一种无序名值对的集合。因为在ECMAScript中不能定义自己的数据类型，所有值都可以用上述7种数据类型之一来表示。只有7种数据类型似乎不足以表示全部数据。但ECMAScript的数据很灵活，一种数据类型可以当作多种数据类型来使用。")]),t._v(" "),a("h4",{attrs:{id:"_4-1-typeof操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-typeof操作符"}},[t._v("#")]),t._v(" 4.1  "),a("code",[t._v("typeof")]),t._v("操作符")]),t._v(" "),a("p",[t._v("​\t\t"),a("code",[t._v("typeof")]),t._v("在某些情况下返回的结果可能会让人费解，但技术上讲还是正确的。比如，调用"),a("code",[t._v("typeof null")]),t._v("返回的是"),a("code",[t._v("object")]),t._v("。这是因为特殊值"),a("code",[t._v("null")]),t._v("被认为是一个空对象的引用。")]),t._v(" "),a("blockquote",[a("p",[t._v("严格来讲，函数在ECMAScript中被认为是对象，并不代表一种数据类型。可是，函数也有自己特殊的属性。为此，就有必要通过"),a("code",[t._v("typeof")]),t._v("操作符来区分函数和其他对象。")])]),t._v(" "),a("h4",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),a("h4",{attrs:{id:"_4-2undefined类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2undefined类型"}},[t._v("#")]),t._v(" 4.2\t"),a("code",[t._v("Undefined")]),t._v("类型")]),t._v(" "),a("p",[t._v("​\t\t\t"),a("code",[t._v("Undefined")]),t._v("类型只有一个值，就是特殊值"),a("code",[t._v("undefined")]),t._v("。当用"),a("code",[t._v("var")]),t._v("或"),a("code",[t._v("let")]),t._v("声明了变量但没有初始化时，就相当于给变量赋予了"),a("code",[t._v("undefined")]),t._v("值。")]),t._v(" "),a("blockquote",[a("p",[t._v("包含undefined值的变量跟未定义变量是有区别的。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个变量被声明了，只是值为undefined")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 确保没有声明过这个变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let age")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "undefined"')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("在对未初始化的变量调用"),a("code",[t._v("typeof")]),t._v("时，返回的结果是"),a("code",[t._v("undefined")]),t._v("，但未声明的变量调用它时，返回的结果还是"),a("code",[t._v("undefined")]),t._v("，但对未声明的变量调用它时，返回的结果还是"),a("code",[t._v("undefined")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个变量被声明了，只是值为undefined")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "undefined"')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "undefined"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 无论声明还是未声明，typeof返回的都是字符串"undefined"。逻辑上讲这是对的，因为虽然严格来讲这两个变量存在根本性差异，但它对任何一个变量都不可能执行什么真正的操作。')]),t._v("\n")])])]),a("h4",{attrs:{id:"_4-3null类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3null类型"}},[t._v("#")]),t._v(" 4.3\t"),a("code",[t._v("Null")]),t._v("类型")]),t._v(" "),a("p",[t._v("​\t\t\t\t"),a("code",[t._v("Null")]),t._v("类型同样只有一个值，即特殊值"),a("code",[t._v("null")]),t._v("。逻辑上讲，"),a("code",[t._v("null")]),t._v("值表示一个空对象指针，这也是"),a("code",[t._v("typeof")]),t._v("传一个"),a("code",[t._v("null")]),t._v("会返回"),a("code",[t._v("object")]),t._v("的原因：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" car "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" car"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\n")])])]),a("h4",{attrs:{id:"_4-4-boolean类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-boolean类型"}},[t._v("#")]),t._v(" 4.4 "),a("code",[t._v("Boolean")]),t._v("类型")]),t._v(" "),a("p",[t._v("​\t\t\t"),a("code",[t._v("Boolean")]),t._v("（布尔值）类型是ECMAScript中使用最频繁的类型之一。")]),t._v(" "),a("h4",{attrs:{id:"_4-5-number类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-number类型"}},[t._v("#")]),t._v(" 4.5 "),a("code",[t._v("Number")]),t._v("类型")]),t._v(" "),a("p",[t._v("​\t\t\tECMAScript中最有意思的数据类型或许就是"),a("code",[t._v("Number")]),t._v("了。"),a("code",[t._v("Number")]),t._v("类型使用IEEE 754格式表示整数和浮点值。")]),t._v(" "),a("p",[t._v("​\t\t\t①、浮点值")]),t._v(" "),a("p",[t._v("​\t\t\t\t浮点值的精确度最高可达17位小数，但在算术计算中远不如整数精确。例如，0.1+0.2得到的不是0.3，二是0.300 000 000 000 000 04。由于这种微小的舍入错误，导致很难测试特定的浮点值。")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("注意")]),t._v("\t之所以存在这种舍入错误，是因为使用了IEEE 754数值，这种错误并非ECMAScript所独有。其他使用相同格式的语言也有这个问题。")])]),t._v(" "),a("p",[t._v("​")]),t._v(" "),a("p",[t._v("​\t\t\t②、值的范围")]),t._v(" "),a("p",[t._v("​\t\t\t\t由于内存的限制，ECMAScript并不支持表示这个世界上的所有数值。ECMAScript可以表示的最小数值保存在"),a("code",[t._v("Number.MIN_VALUE")]),t._v("中，这个值在多数浏览器中是5e-324；可以表示的最大数值保存在"),a("code",[t._v("Number.MAX_VALUE")]),t._v("中，这个值在多数浏览器中是1.7976932349623157e+308。如果某个计算得到的数值超出了JavaScript可以表示的范围，那么这个数值会被自动转换为一个特殊的"),a("code",[t._v("Infinity")]),t._v("（无穷）值。负无穷大：-Infinity，正无穷大：Infinity。")]),t._v(" "),a("blockquote",[a("p",[t._v("要确定一个值是不是有限大，可以使用"),a("code",[t._v("isFinite()")])])]),t._v(" "),a("h4",{attrs:{id:"_4-6-string类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-string类型"}},[t._v("#")]),t._v(" 4.6 "),a("code",[t._v("String")]),t._v("类型")]),t._v(" "),a("p",[t._v("​\t\t"),a("code",[t._v("String")]),t._v("数据类型表示零或多个16位Unicode字符序列。")]),t._v(" "),a("p",[t._v("​\t\t"),a("code",[t._v("null")]),t._v("和"),a("code",[t._v("undefined")]),t._v("值没有"),a("code",[t._v("toString()")]),t._v("方法，而"),a("code",[t._v("String()")]),t._v("方法有")]),t._v(" "),a("h4",{attrs:{id:"_4-7-symbol类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-symbol类型"}},[t._v("#")]),t._v(" 4.7 "),a("code",[t._v("Symbol")]),t._v("类型")]),t._v(" "),a("p",[t._v("​\t\t"),a("code",[t._v("Symbol")]),t._v("是ECMAScript6新增的数据类型。符号是原始值，且符号实例唯一、不可变的。符号的用途是确保对象属性使用唯一标识符，不会发生属性冲突的危险。")]),t._v(" "),a("h4",{attrs:{id:"_4-8-object类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-object类型"}},[t._v("#")]),t._v(" 4.8 "),a("code",[t._v("Object")]),t._v("类型")]),t._v(" "),a("p",[t._v("​\t\t"),a("code",[t._v("ECMAScript")]),t._v("中的对象其实就是一组数据和功能的集合。对象通过"),a("code",[t._v("new")]),t._v("操作符后跟对象类型的名称来创建。通过创建"),a("code",[t._v("Object")]),t._v("类型的实例来创建自己的对象，给对象添加属性和方法。")]),t._v(" "),a("h3",{attrs:{id:"_5、操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、操作符"}},[t._v("#")]),t._v(" 5、操作符")]),t._v(" "),a("h4",{attrs:{id:"_5-1-一元操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-一元操作符"}},[t._v("#")]),t._v(" 5.1 一元操作符")]),t._v(" "),a("blockquote",[a("p",[t._v("只操作一个值的操作符")])]),t._v(" "),a("p",[t._v("​\t①、递增/递减操作符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("num"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  先使用num再执行+1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("num   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  直接使用num+1后的值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 同上\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'z'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ns1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3，字符串有效数值形式- 转换为数值再应用改变，变量类型变为数值。")]),t._v("\ns2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN，字符串非有效数值形式- 转换为`NaN`，变量类型变为数值。")]),t._v("\nb"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1，布尔值- false转换为0，true转换为1,变量类型变为数值。")]),t._v("\nf"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0.1000000000000009(因为浮点型不精准)，浮点型- 加1或减1.")]),t._v("\no"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -2，对象会调用`valueOf()`方法获取可以操作的值。得到值对应上述规则。如果`NaN`，调用`toString`并再次应用上述规则。 ")]),t._v("\n")])])]),a("p",[t._v("​\t②、一元加减")]),t._v(" "),a("blockquote",[a("p",[t._v("一元加减由（+ -）表示，放在变量前头，对数值没任何影响")])]),t._v(" "),a("h4",{attrs:{id:"_5-2-位操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-位操作符"}},[t._v("#")]),t._v(" 5.2 位操作符")]),t._v(" "),a("blockquote",[a("p",[t._v("用于数值的底层操作，也就是操作内存中表示数据的比特（位）")])]),t._v(" "),a("p",[t._v("​")]),t._v(" "),a("p",[t._v("①、按位非")]),t._v(" "),a("blockquote",[a("p",[t._v("用（~）表示，它的作用是对数值取反并减一。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 二进制")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v("num1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -26")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 和下面操作一样")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -26")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 虽然返回结果一样，但是位操作符的速度快的多，因为位操作是在数值的底层表示上完成的。")]),t._v("\n")])])]),a("p",[t._v("②、按位与")]),t._v(" "),a("blockquote",[a("p",[t._v("用（&）表示，按位与操作在两个位都是1时返回1，在任何一位是0时返回0")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 二进制计算过程：")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0001")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1001")]),t._v("\n  \t "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0011")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AND")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0001")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果为 1")]),t._v("\n")])])]),a("p",[t._v("③、按位或")]),t._v(" "),a("blockquote",[a("p",[t._v("用（|）表示，按位或操作在至少一位是1时返回1，两位都是0时返回0")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 27")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 二进制计算过程：")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0001")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1001")]),t._v("\n  \t "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0011")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AND")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0001")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1011")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果为 27")]),t._v("\n")])])]),a("p",[t._v("④、按位异或")]),t._v(" "),a("blockquote",[a("p",[t._v("用（^）表示，按位异或只在一位上是1的时候返回1（两位都是1或0，则返回0）")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 26")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 二进制计算过程：")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0001")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1001")]),t._v("\n  \t "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0011")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AND")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0001")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1010")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果为 26")]),t._v("\n")])])]),a("p",[t._v("⑤、左移")]),t._v(" "),a("blockquote",[a("p",[t._v("用（<<）表示，会按照指定的位数将数值的所有位向左移动。")])]),t._v(" "),a("p",[t._v("⑥、有符号右移")]),t._v(" "),a("blockquote",[a("p",[t._v("用（>>）表示，会将数值的所有32位都向右移，同时保留符号。")])]),t._v(" "),a("p",[t._v("⑦、无符号右移")]),t._v(" "),a("h4",{attrs:{id:"_5-3-布尔操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-布尔操作符"}},[t._v("#")]),t._v(" 5.3 布尔操作符")]),t._v(" "),a("p",[t._v("​\t①、逻辑非")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blue"')]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12345")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),a("p",[t._v("​\t②、逻辑与")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n")])])]),a("p",[t._v("​\t③、逻辑或")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n")])])]),a("h4",{attrs:{id:"_5-4-乘性操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-乘性操作符"}},[t._v("#")]),t._v(" 5.4 乘性操作符")]),t._v(" "),a("p",[t._v("​\t①、乘法操作符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n")])])]),a("p",[t._v("​\t②、除法操作符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n")])])]),a("p",[t._v("​\t③、取模操作符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数值操作，返回余数")]),t._v("\n")])])]),a("h4",{attrs:{id:"_5-5-指数操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-指数操作符"}},[t._v("#")]),t._v(" 5.5 指数操作符")]),t._v(" "),a("blockquote",[a("p",[t._v("ECMAScript7新增了指数操作符，"),a("code",[t._v("Math.pow()")]),t._v("现在有了自己的操作符"),a("code",[t._v("**")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 9")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\t\t\t    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 9")]),t._v("\n\n包含自己的指数赋值操作符"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("**=")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" squared "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nsquared "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\nsquared\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 9")]),t._v("\n")])])]),a("h4",{attrs:{id:"_5-6-加性操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-加性操作符"}},[t._v("#")]),t._v(" 5.6 加性操作符")]),t._v(" "),a("p",[t._v("​\t①、加法操作符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n")])])]),a("p",[t._v("​\t②、减法操作符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n")])])]),a("h4",{attrs:{id:"_5-7关系操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-7关系操作符"}},[t._v("#")]),t._v(" 5.7关系操作符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("、 "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("、 "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<=")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("、 "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(">=")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数值比较,执行数值比较")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字符串比较, 逐个比较字符串中对应的字符编码。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有任一操作数是数值，则会转换成数值操作")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 任何与`NaN`的比较都返回`false`")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"23"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n")])])]),a("h4",{attrs:{id:"_5-8-相等操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-相等操作符"}},[t._v("#")]),t._v(" 5.8 相等操作符")]),t._v(" "),a("p",[t._v("​\t①、等于和不等于")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v("\n")])])]),a("p",[t._v("​\t②、全等和不全等")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v("\n")])])]),a("h4",{attrs:{id:"_5-9-条件操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-9-条件操作符"}},[t._v("#")]),t._v(" 5.9 条件操作符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" max "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nmu1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" num2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" num2\n")])])]),a("h4",{attrs:{id:"_5-10-赋值操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-10-赋值操作符"}},[t._v("#")]),t._v(" 5.10 赋值操作符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n")])])]),a("h4",{attrs:{id:"_5-11-逗号操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-11-逗号操作符"}},[t._v("#")]),t._v(" 5.11 逗号操作符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// num的值为0")]),t._v("\n")])])]),a("h3",{attrs:{id:"_6、语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、语句"}},[t._v("#")]),t._v(" 6、语句")]),t._v(" "),a("h4",{attrs:{id:"_6-1-if语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-if语句"}},[t._v("#")]),t._v(" 6.1  \tif语句")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"_6-2-do-while语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-do-while语句"}},[t._v("#")]),t._v(" 6.2 do-while语句")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("do-while")]),t._v("是一种后测试循环语句，即循环体中的代码执行后才会对退出条件进行执行。（循环体内的代码至少执行一次）")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"_6-3-while语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-while语句"}},[t._v("#")]),t._v(" 6.3 while语句")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("while")]),t._v("语句是一种先测试循环语句，即先检测退出条件，再执行循环体内的代码。（循环体内的代码可能不会执行）")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"_6-4-for语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-for语句"}},[t._v("#")]),t._v(" 6.4 for语句")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("for")]),t._v("语句也是先测试语句，只不过增加了进入循环之前的初始化代码，以及循环执行后要执行的表达式")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无法通过`while`循环实现的逻辑，同样也无法使用`for`循环实现。`for`循环只是将循环相关的代码封装在了一起。")]),t._v("\n")])])]),a("blockquote",[a("p",[a("code",[t._v("for")]),t._v("循环的初始化代码中，可以不使用变量声明的关键字。初始化定义的迭代器变量在循环执行完成后几乎不可能再用到。最清晰的写法是使用"),a("code",[t._v("let")]),t._v("声明迭代器变量，这样可以将变量的作用域限定再循环中。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化/条件表达式和循环后表达式都不是必需的，可以创建一个无穷循环：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只要包含条件表达式，for循环就成了while")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"_6-5-for-in语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-for-in语句"}},[t._v("#")]),t._v(" 6.5 for-in语句")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("for-in")]),t._v("语句是一种严格的迭代语句，用于枚举对象中的非符号键属性")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" propName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("propName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ECMAScript中对象的属性是无序的，因此`for-in`语句不能保证返回对象属性的顺序。（所有可枚举的属性都会返回一次，但返回的顺序可能会因为浏览器而异。）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果`for-in`循环要迭代的变量是`null`或`nudefined`， 则不执行循环体。")]),t._v("\n")])])]),a("h4",{attrs:{id:"_6-6-for-of语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-6-for-of语句"}},[t._v("#")]),t._v(" 6.6 for-of语句")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("for-of")]),t._v("语句是一种严格的迭代语句，用于遍历可迭代对象的元素")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" el "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"_6-7-标签语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-7-标签语句"}},[t._v("#")]),t._v(" 6.7 标签语句")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("lable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" statement\n")])])]),a("h4",{attrs:{id:"_6-8-break和continue语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-8-break和continue语句"}},[t._v("#")]),t._v(" 6.8 break和continue语句")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("break")]),t._v("语句用于立即退出循环，强制执行循环后的下一条语句。")]),t._v(" "),a("p",[a("code",[t._v("coontinue")]),t._v("语句也用于立即退出循环，强制执行循环后的下一条语句。")])]),t._v(" "),a("h4",{attrs:{id:"_6-9-with语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-9-with语句"}},[t._v("#")]),t._v(" 6.9 with语句")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("whith")]),t._v("语句的用途是将代码作用域设置为特定的对象")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用`with`语句的主要场景是针对一个对象反复操作，这个时候将代码作用域设置为该对象能提供便利")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" qs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" hostName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hostname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" qs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" search"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" hostName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hostname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" href"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里，`with`语句用于连接`location`对象。在这个语句内部，每个变量首先会被认为是一个局部变量。如果没有找到该局部变量，则会搜索`location`对象，看它是否有一个同名的属性，如果有，则该变量会被求值为`location`对象的属性。")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 严格模式不允许使用`with`语句，会抛出错误")]),t._v("\n")])])]),a("h4",{attrs:{id:"_6-10-switch语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-10-switch语句"}},[t._v("#")]),t._v(" 6.10 switch语句")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("switch")]),t._v("语句是与"),a("code",[t._v("if")]),t._v("语句紧密相关的一种流控制语句")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//跳过")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("35")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'25 or 35'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'45'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'other'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_7、函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、函数"}},[t._v("#")]),t._v(" 7、函数")]),t._v(" "),a("p",[t._v("​\t\t函数对任何语音来说都是核心组件，因为他们可以封装语句，然后在任何地方、任何时间执行。")]),t._v(" "),a("h3",{attrs:{id:"_8、小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、小结"}},[t._v("#")]),t._v(" 8、小结")]),t._v(" "),a("blockquote",[a("p",[t._v("JavaScript的核心语音特性在ECMA-262中以伪语音ECMAScript的形式来定义。ECMAScript包含所有基本语法、操作符、数据类型和对象，能完成基本的计算任务，但没有提供获得输入和产生输出的机制。")])]),t._v(" "),a("h2",{attrs:{id:"四、变量、作用域与内存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、变量、作用域与内存"}},[t._v("#")]),t._v(" 四、变量、作用域与内存")]),t._v(" "),a("h3",{attrs:{id:"_1、原始值与引用值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、原始值与引用值"}},[t._v("#")]),t._v(" 1、原始值与引用值")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("原始值")]),t._v("：就是最简单的数据。")]),t._v(" "),a("p",[a("strong",[t._v("引用值")]),t._v("：是由多个值构成的对象。")])]),t._v(" "),a("p",[a("code",[t._v("Undefined")]),t._v("、"),a("code",[t._v("Null")]),t._v("、"),a("code",[t._v("Boolean")]),t._v("、"),a("code",[t._v("Nubmer")]),t._v("、"),a("code",[t._v("String")]),t._v("和"),a("code",[t._v("Symbol")]),t._v("。保存原始值的变量是"),a("strong",[t._v("按值")]),t._v("访问的，操作的就是储存在变量中的实际值。")]),t._v(" "),a("p",[t._v("引用值是保存在内存中的对象。JavaScript不允许直接访问内存位置，所不能直接操作对象所在的内存空间。在操作对象时，实际上操作的是对该对象的"),a("strong",[t._v("引用")]),t._v("而非实际的对象本身。为此，保存引用值的变量是"),a("strong",[t._v("按引用")]),t._v("访问的")])])}),[],!1,null,null,null);s.default=e.exports}}]);