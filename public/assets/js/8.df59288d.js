(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{195:function(s,a,t){"use strict";t.r(a);var e=t(6),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"sso"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sso"}},[s._v("#")]),s._v(" SSO")]),s._v(" "),t("p",[s._v("后端：")]),s._v(" "),t("h2",{attrs:{id:"jwt实现单点登录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jwt实现单点登录"}},[s._v("#")]),s._v(" jwt实现单点登录")]),s._v(" "),t("h3",{attrs:{id:"问："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#问："}},[s._v("#")]),s._v(" 问：")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 什么是 jwt，jwt 缺点有哪些\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" jwt 有哪些部分组成\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" jwt 与 token之间存在哪些区别\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v(" 如何纯手写一个 jwt\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v(" jwt 如何设计过期时间\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6.")]),s._v(" jwt 与 oauht2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("之间的区别\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.")]),s._v(" 基于 jwt"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("oauht2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("实现单点登录\n")])])]),t("p",[s._v("单点登录 SSO\nJwt  json web token\noauht2.0 开发协议")]),s._v(" "),t("blockquote",[t("p",[s._v("写多了，忘了咱们是前端（不要以为走错频道了，我们也要了解一二相关）")])]),s._v(" "),t("h2",{attrs:{id:"token"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#token"}},[s._v("#")]),s._v(" token")]),s._v(" "),t("h3",{attrs:{id:"特征："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特征："}},[s._v("#")]),s._v(" 特征：")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("临时且唯一  保证不能重复 缓存有效期机制\n")])])]),t("p",[s._v("ex:只能门锁 临时密码 具有有效期，临时且唯一")]),s._v(" "),t("h3",{attrs:{id:"如何生成："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何生成："}},[s._v("#")]),s._v(" 如何生成：")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("uuid作为token\n")])])]),t("p",[s._v("ex:生成token（uuid生成）作为Rediskey放入redis中，Redis的key作为有效期")]),s._v(" "),t("h3",{attrs:{id:"如何使用："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何使用："}},[s._v("#")]),s._v(" 如何使用：")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("token和sessionid非常相似，传统项目使用session存在缺陷：放入到服务端，\nseesion\t类似redis存放缓存内容\nSession 中的 sessionid\t类似token\n不共享\n大的项目都是基于token替代Session，Redis中。\n")])])]),t("p",[s._v("用户登录 前后端分离项目")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 验证账号密码，成功验证的情况下\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 生成对应token 采用uuid\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" 将该token缓存到redis中，rediskey "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" token， value userId。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v(" 最后返回token给客户端，客户端将token保存到cookie中\n")])])]),t("p",[s._v("查询的情况下：")]),s._v(" "),t("blockquote",[t("p",[s._v("客户端每次请求的时候在请求头中传递该token，服务器端接收到Token，从Redis查找对应key对应的value userId。在根据userId查询用户信息返回给客户端。")])]),s._v(" "),t("p",[s._v("使用token的情况下依赖于：")]),s._v(" "),t("blockquote",[t("p",[s._v("必须依赖服务端 redis")])]),s._v(" "),t("h3",{attrs:{id:"优点："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优点："}},[s._v("#")]),s._v(" 优点：")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 能够隐藏参数真实性\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 临时且唯一\n")])])]),t("h3",{attrs:{id:"缺点："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缺点："}},[s._v("#")]),s._v(" 缺点：")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 依赖于服务端redis，高并发情况下频发查询增加redis压力\n")])])]),t("h2",{attrs:{id:"jwt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jwt"}},[s._v("#")]),s._v(" Jwt")]),s._v(" "),t("blockquote",[t("p",[s._v("Jwt 实际和token基本设计思想一样。")])]),s._v(" "),t("p",[t("strong",[s._v("Jwt：")]),s._v(" json web token")]),s._v(" "),t("blockquote",[t("p",[s._v("Json：数据交换格式\t轻量级、跨语言、减少宽带、可读性高。")])]),s._v(" "),t("h3",{attrs:{id:"加密算法："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#加密算法："}},[s._v("#")]),s._v(" 加密算法：")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("\n单向加密 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MD5")]),s._v(" 只能暴力破解但是不可以解密\n\n双向加密（对称加密）aes des\n\n非对称加密 rsa\n")])])]),t("h3",{attrs:{id:"jwt主要组成："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jwt主要组成："}},[s._v("#")]),s._v(" Jwt主要组成：")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("第一部分：header头部 标记使用什么算法 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HS256")]),s._v("，"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RSA256")]),s._v("\n\n第二部分：Payload（载荷）jwt存放的数据\n\n注意不能存放敏感数据\n\n\n\n第三部分：PayLoad采用"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MD5")]),s._v("加密之后的签名值\n")])])]),t("h3",{attrs:{id:"生成："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成："}},[s._v("#")]),s._v(" 生成：")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("Base64"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ENcode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("header"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Base64"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ENcode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Payload"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("签名值\n")])])]),t("h3",{attrs:{id:"优点：-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优点：-2"}},[s._v("#")]),s._v(" 优点：")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 减去服务端压力\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" Jwt查询效率比token高\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" 不容易被客户端篡改\n")])])]),t("h3",{attrs:{id:"缺点：-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缺点：-2"}},[s._v("#")]),s._v(" 缺点：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1. 如果一旦生成好一个jwt之后，后期是否可以销毁.\n2. Jwt payload 数据多，占用服务器端带宽资源\n")])])]),t("h2",{attrs:{id:"jwt-与-token之间到底有哪些区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jwt-与-token之间到底有哪些区别"}},[s._v("#")]),s._v(" Jwt 与 token之间到底有哪些区别")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" token对应的内容存放在Redis中\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" Jwt 对应的payload数据存放在客户端\n")])])]),t("hr"),s._v(" "),t("h2",{attrs:{id:"sso-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sso-2"}},[s._v("#")]),s._v(" SSO")]),s._v(" "),t("p",[t("strong",[s._v("上面主要了解到后端具体实现单点登录的做法跟优缺点，下面着重整体讲述单点登录概念实践")])]),s._v(" "),t("p",[s._v("SSO（single sign On）：在多个应用系统中，只需要登录一次，就可以访问其他相互信任的应用系统。")]),s._v(" "),t("h3",{attrs:{id:"技术实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#技术实现"}},[s._v("#")]),s._v(" 技术实现")]),s._v(" "),t("h4",{attrs:{id:"普通登录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#普通登录"}},[s._v("#")]),s._v(" 普通登录")]),s._v(" "),t("blockquote",[t("p",[s._v("再说单点登录（SSO）的技术实现之前，先说一下普通的登录认证机制")])]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("我们在浏览器中访问一个应用，这个应用需要登录，我们填写完用户名和密码后，完成登录认证。这时，我们在这个用户的session中标记登录状态为yes（已登录），同时在浏览器中写入Cookie，这个Cooike是这个用户的唯一标识。下次我们在访问这个应用的时候，请求中会带上这个Cookie，服务端会根据这个Cooike找到对应的session，通过session来判断这个用户是否登录。如果不做特殊配置，这个Cooike的名字就叫做sessionId  值在服务端（server）是唯一的\n")])])]),t("h4",{attrs:{id:"同域名下的单点登录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#同域名下的单点登录"}},[s._v("#")]),s._v(" 同域名下的单点登录")]),s._v(" "),t("blockquote",[t("p",[s._v("同域下的单点登录是巧用了Cookie顶域的特性。")])]),s._v(" "),t("p",[s._v("一个企业一般情况下只有一个域名，通过二级域名区分不同的系统。比如我们有一个域名叫：xiaoyu.com，同时有两个业务系统分别叫：app1.xaioyu.com和app2.xiaoyu.com。我们要做单点登录(SSO)，需要一个登录系统，叫做：sso.xiaoyu.com。")]),s._v(" "),t("p",[s._v("我们只要在sso.xiaoyu.com登录，app1.xaioyu.com和app2.xiaoyu.com就也登录了。通过上面的登录认证机制，我们可以知道，在sso.xiaoyu.com中登录了，其实是在sso.xiaoyu.com的服务端的session中记录了登录状态，同时在浏览器端的sso.xiaoyu.com下写入了Cookie。那么我们怎么才能让app1.xaioyu.com和app2.xiaoyu.com登录呢？这里有两个问题：")]),s._v(" "),t("ul",[t("li",[s._v("Cookie是不能跨域的，我们Cookie的domain属性时sso.xiaoyu.com，在给app1.xaioyu.com和app2.xiaoyu.com发送请求是带不上的。")]),s._v(" "),t("li",[s._v("sso、app1和app2是不同的应用，他们的session存在自己的应用内，是不共享的")])]),s._v(" "),t("p",[s._v("那么我们如何解决这两个问题呢？针对第一个问题，sso登录以后，可以将Cookie的域设置为顶域，即xiaoyu.com，这样子所有子域的系统都可以访问到顶域的Cookie。我们在设置Cookie时，只能设置顶域和自己的域，不能设置其他域。比如：我们不能在自己的系统中给baidu.com的域设置Cookie。")]),s._v(" "),t("p",[s._v("Cookie的问题解决了，我再来看session的问题。我们在sso系统登录了，这时再访问app1、Cookie也逮到了app1的服务端，app1的服务器怎么找到这个Cookie对应的session呢？这里就要把3个系统的Session共享，解决共享Session的方案很多，这是后端需要考虑的问题，例如：Spring-Session。这样第2个问题也解决了。")]),s._v(" "),t("blockquote",[t("p",[s._v("同域下的单点登录就实现了，但这不是真正的单点登录")])]),s._v(" "),t("h4",{attrs:{id:"不同域下的单点登录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不同域下的单点登录"}},[s._v("#")]),s._v(" 不同域下的单点登录")]),s._v(" "),t("blockquote",[t("p",[s._v("同域名的单点登录巧用了Cookie顶域的特性。如果是不同域呢？不同域之间Cookie是不共享的，怎么办？")])]),s._v(" "),t("p",[s._v("这里我们就要说一说CAS流程，这个流程是单点登录的标准流程。")]),s._v(" "),t("p",[t("strong",[s._v("具体流程：")])]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 用户访问app系统，app系统需要登录，但用户现在没有登录。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 跳转到"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CAS")]),s._v(" server，即"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SSO")]),s._v("登录系统。"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SSO")]),s._v("系统也没有登录，弹出用户登录页。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" 用户填写用户名、密码，"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SSO")]),s._v("系统进行认证后，将登录状态写入"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SSO")]),s._v("的session，浏览器中写入"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SSO")]),s._v("域下的Cookie。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SSO")]),s._v("系统登录完成后会生成一个"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ST")]),s._v("（Service Ticket），然后跳转到app系统，同时将"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ST")]),s._v("作为参数传递给app系统。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v(" app系统拿到"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ST")]),s._v("后，从后台向"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SSO")]),s._v("系统发生请求，验证"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ST")]),s._v("是否有效。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6.")]),s._v(" 验证通过后，app系统将登录状态写入session并设置app域下的Cookie。\n\n")])])]),t("p",[s._v("至此，跨域单点登录完成了，以后我们再访问app系统时，app系统就是登录的。接下来我们再看看访问app2系统时的流程。")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 用户访问app2系统，app2系统没有登录，跳转到"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SSO")]),s._v("。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 由于"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SSO")]),s._v("已经登录了，不需要重新登录验证。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SSO")]),s._v("生成"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ST")]),s._v("，浏览器跳转到app2系统，并将"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ST")]),s._v("作为参数传递给app2。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v(" app2拿到"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ST")]),s._v("，后台访问"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SSO")]),s._v("，验证"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ST")]),s._v("是否有效。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v(" 验证成功后，app2将登录状态写入session，并在app2域下写入Cookie。\n\n这样，app2系统不需要走登录流程，就已经是登录。"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SSO")]),s._v("，app和app2在不同的域，他们之间的session不共享也是没有问题的。\n")])])]),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("ul",[t("li",[s._v("单点登录（SSO系统）是保障各业务系统的用户资源的安全。")]),s._v(" "),t("li",[s._v("各个业务系统获得的信息是，这个用户能不能访问我的资源。")]),s._v(" "),t("li",[s._v("单点登录，资源dou7zai各个业务系统这边，不在SSO那一方。用户在给SSO服务提供了用户名密码后，作为业务系统不知道这件事。SSO随便给业务系统一个ST，那么业务系统是不能确定这个ST是用户伪造的，还是真的有效，所以要拿着这个ST去SSO服务器再问一下，这个用户给我的ST是否有效，是有效的我才让这个用户访问。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);